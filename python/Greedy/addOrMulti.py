#곱하기 혹은 더하기 문제
# 각 자리가 숫자(0부터 9)로만 이루어진 문자열 S가 주어졌을때 왼쪽부터 오른쪽으로 하나씩 모든 숫자를 확인하며 숫자 사이에
# 'x' 혹은 '+' 연산자를 넣어 결과적으로 만들 수 있는 가장 큰 수를 구하는 프로그램을 작성하시오.
# 단 +보다 x를 먼저 계산하는 일반적인 방식과 달리 모든 연산은 왼쪽에서부터 순서대로 이루어진다고 가정한다.
# 예를 들어 02984라는 문자열로 만들 수 있는 가장 큰 숫자는 ((((0+2)*9)*8)*4) = 576
# 또한 만들어질 수 있는 가장 큰 수는 항상 20억 이하의 정수가 되도록 입력이 주어진다.
# 팁) 일반적인 프로그래밍 언어에서 기본 int형은 약 21억까지 값이 형성될 수 있기 때문에 문제에서 최대값을 명시해준 걸로 보인다.
# python에서는 수의 제한이 없기 때문에 문제는 없다.

#내 풀이
# 0이거나 1인 경우 경우에만 +
# 0이 아닐 경우 x
# 정당성 분석
# 기본적으로 +보다 x가 값을 배로 증가시키기 때문에 x를 계속 사용하려고 하는 것이 값을 키우는 방식
# 아이디어 : 그리디

# input = map(int, input().split())
input = input()
print(len(input))

result = int(input[0])
for i in range(1, len(input)) :
    print(input[i])
    num = int(input[i])
    if result <=1 or num <=1 :
        result +=num
    else :
        result *=num

print(result)


