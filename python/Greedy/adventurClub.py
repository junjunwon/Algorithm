# 모험가 길드 문제
# 한 마을에 모험가가 N명이 있다. 모험가 길드에서는 N명의 모험가를 대상으로 '공포도'를 측정했는데, 
# '공포도'가 높은 모험가는 쉽게 공포를 느껴 위험 상황에서 제대로 대처할 능력이 떨어진다.
# 모험가 길드장인 동빈이는 모험가 그룹을 안전하게 구성하고자 공포도가 X인 모험가는 반드시 X명 이상으로 구성한 모험가 그룹에 참여해야 여행을 떠날 수 있도록 규정했다.
# 동빈이는 최대 몇 개의 모험가 그룹을 만들 수 있는지 궁금하다. N명의 모험가에 대한 정보가 주어졌을 때 
# 여행을 떠날 수 있는 그룹 수의 최대 값을 구하는 프로그램을 작성하시오.

#예시
# N = 5,
# 공포도 : 2 3 1 2 2
# 이 경우 그룹 1에 공포도가 1,2,3인 모험가를 한 명씩 넣고 그룹 2에 공포가 2인 남은 두명을 넣게 되면 총 2개의 그룹을 만들 수 있다.
# 또한 몇 명의 모험가는 마을에 그대로 남아있어도 되기 때문에, 모든 모험가를 특정한 그룹에 넣을 필요는 없다.

#난이도 : 하
# 풀이 시간 : 30분
# 시간 제한: 1초
# 메모리 제한 : 128MB
# 기출 핵심 유형

#나의 풀이
#원하는 것
##최대한 많은 그룹을 만들자.
#생각
## 무서운 사람은 안가면 되잖아?
## 오름차순으로 넣고, 
## 공포도가 1이면 혼자 가고
## 공포도가 2면 2명으로 
## 이때 index+2>=len(array) break;
## 2일땐 그 다음 index가 2일 경우 그룹 +1, index + 2
## 즉 공포도가 n이면 n명으로
## index+n>=len(array) break
## n일땐 그 다음 index가 n일 경우 그룹+1, index+n
##
## 
#정당성
## 무서운 사람은 안가면 되니까, 겁 없는 사람부터 그룹을 만들면 저 세분화하여 쪼갤 수 있음
#아이디어 : 그리디
# n = int(input())
# array = list(map(int, input().split()))
# array.sort()
# print(n, array)
# group = 0
# for i in range(len(array)) :
#     if ( i + array[i])>=len(array) :
#         break
#     print(array[i])
#     if array[i] == 1 :
#         group += 1
#     elif array[i] == array[i+array[i]] :
#         group+=1
#         i+=array[i]

# print(group)
#위 문제 풀이가 맞는지 확인이 필요하다.

#동빈나 유튜버 풀이
n = int(input())
data = list(map(int, input().split))
data.sort()

result = 0 # 총 그룹의 수
count = 0 # 현재 그룹에 포함된 모험가 수

for i in data : 
    count += 1 # 현재 그룹에 해당 모험가를 포함시키기
    if count >= i : # 현재 그룹에 포함된 모함가의 수가 현재의 공포도 이상이라면, 그룹 결성
        result += 1
        count = 0 # 현재 그룹에 포함된 모험가의 수 초기화

print(result)